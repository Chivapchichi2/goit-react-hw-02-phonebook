{"version":3,"sources":["components/Container/Container.module.css","components/Header/Header.module.css","components/Notification/Notification.module.css","components/Section/Section.module.css","components/ContactForm/ContactForm.js","components/ContactList/Contact/Contact.js","components/ContactList/ContactList.js","components/Container/Container.js","components/Filter/Filter.js","components/Header/Header.js","components/Notification/Notification.js","components/Section/Section.js","components/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleInputChange","e","target","value","setState","handleFormSubmit","preventDefault","props","onSubmit","this","type","pattern","title","required","onChange","Component","Contact","id","onDelete","onClick","ContactList","contacts","map","Container","children","className","styles","Filter","onFilter","Header","Notification","message","Section","App","filter","addContact","uid","changeFilter","getFilteredContacts","cleanFilter","toLowerCase","contact","includes","sort","a","b","localeCompare","deleteContact","idContact","prevState","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d59927e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1wLBh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__3e4vk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notification_Notification__2vntX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__1-u2M\"};","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    const { value, name } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.setState({ name: '', number: '' });\r\n  }\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleFormSubmit}>\r\n        <label>\r\n          Name:\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number:\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Contact = ({id, name, number, onDelete}) => (\r\n  <li>\r\n    <span>{name}:</span>\r\n    <span>{number}</span>\r\n    <button type=\"button\" onClick={()=>onDelete(id)}>\r\n      Delete\r\n    </button>\r\n  </li>\r\n)\r\n\r\nContact.propTypes = {\r\n  id:PropTypes.string.isRequired,\r\n  name:PropTypes.string.isRequired,\r\n  number:PropTypes.string.isRequired,\r\n  onDelete:PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Contact from './Contact'\r\n\r\nconst ContactList = ({ contacts, onDelete }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <Contact\r\n        key={id}\r\n        id={id}\r\n        name={name}\r\n        number={number}\r\n        onDelete={onDelete}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.shape).isRequired,\r\n  onDelete:PropTypes.func.isRequired,\r\n}\r\nexport default ContactList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Container.module.css'\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.Container}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default Container;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onFilter }) => (\r\n  <fieldset>\r\n    <legend>Quickly find the right contact</legend>\r\n    <label>\r\n      Find contacts by name\r\n      <input type=\"text\" name=\"filter\" value={value} onChange={onFilter}>\r\n      </input>\r\n    </label>\r\n  </fieldset>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onFilter: PropTypes.func.isRequired,\r\n}\r\nexport default Filter","import React from 'react';\r\nimport styles from './Header.module.css';\r\n\r\nconst Header = () => (\r\n  <header className={styles.Header}>\r\n    <h1 >react hw-02 phone book</h1>\r\n  </header>);\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className={styles.Notification}>{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css'\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={styles.Section}>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.any.isRequired\r\n}\r\n\r\nexport default Section;","import React, { Component } from 'react';\nimport { v4 as uid } from 'uuid';\nimport ContactForm from './ContactForm';\nimport ContactList from './ContactList';\nimport Container from './Container';\nimport Filter from './Filter';\nimport Header from './Header';\nimport Notification from './Notification';\nimport Section from './Section';\n\nclass App extends Component {\n  state = {\n    filter: '',\n    contacts: [],\n  };\n\n  addContact = ({name, number}) => {\n    const { contacts } = this.state;\n    const id = uid();\n    this.setState({ contacts: [{ name, number, id }, ...contacts], filter: '' });\n  };\n\n  changeFilter = e => {\n    const { value } = e.target;\n    this.setState({ filter: value });\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const cleanFilter = filter.toLowerCase();\n    return contacts\n      .filter(contact => contact.name.toLowerCase().includes(cleanFilter))\n      .sort((a, b) => a.name.localeCompare(b.name));\n  }\n\n  deleteContact = (idContact) => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(({id}) => id !== idContact)\n    }))\n  }\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n    \n    return (\n      <Container>\n        <Header />\n        <Section title=\"Phone book\">\n          <ContactForm onSubmit={ this.addContact }/>\n        </Section>\n        <Section title=\"Contacts\">\n          { contacts[0] ?\n            <Filter\n              value={filter}\n              onFilter={this.changeFilter} /> :\n            <Notification\n              message=\"No contacts added\" /> }\n          { contacts[0] && !filteredContacts[0] && <Notification\n            message=\"No contact found\" /> }\n          { filteredContacts[0] && <ContactList\n            contacts={filteredContacts}\n            onDelete={ this.deleteContact }/>}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}