{"version":3,"sources":["components/Container/Container.module.css","components/Header/Header.module.css","components/Notification/Notification.module.css","components/Section/Section.module.css","components/ContactForm/ContactForm.js","components/ContactList/Contact/Contact.js","components/ContactList/ContactList.js","components/Container/Container.js","components/Filter/Filter.js","components/Header/Header.js","components/Notification/Notification.js","components/Section/Section.js","components/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleInputChange","e","target","value","setState","handleFormSubmit","preventDefault","props","onSubmit","this","type","pattern","title","required","onChange","Component","Contact","id","onDelete","onClick","ContactList","contacts","map","Container","children","className","styles","Filter","onFilter","Header","Notification","message","Section","App","filter","addContact","some","contact","alert","split","string","charAt","toUpperCase","slice","join","uid","changeFilter","getFilteredContacts","cleanFilter","toLowerCase","includes","sort","a","b","localeCompare","deleteContact","idContact","prevState","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52b9ec65.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1wLBh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__3e4vk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notification_Notification__2vntX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__1-u2M\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends Component {\n  state = {\n      name: '',\n      number: '',\n  };\n\n  handleInputChange = (e) => {\n      const { value, name } = e.target;\n      this.setState({ [name]: value });\n  };\n\n  handleFormSubmit = (e) => {\n      e.preventDefault();\n      this.props.onSubmit(this.state);\n      this.setState({ name: '', number: '' });\n  };\n\n  render() {\n      const { name, number } = this.state;\n      return (\n          <form onSubmit={this.handleFormSubmit}>\n              <label>\n                  Name:\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    value={name}\n                    onChange={this.handleInputChange}\n                  />\n              </label>\n              <label>\n                  Number:\n                  <input\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                    value={number}\n                    onChange={this.handleInputChange}\n                  />\n              </label>\n              <button type=\"submit\">Add Contact</button>\n          </form>\n      );\n  }\n}\n\nContactForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Contact = ({\n    id, name, number, onDelete,\n}) => (\n    <li>\n        <span>\n            {name}\n            :\n        </span>\n        <span>{number}</span>\n        <button type=\"button\" onClick={() => onDelete(id)}>\n            Delete\n        </button>\n    </li>\n);\n\nContact.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onDelete: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Contact from './Contact';\n\nconst ContactList = ({ contacts, onDelete }) => (\n    <ul>\n        {contacts.map(({ id, name, number }) => (\n            <Contact\n              key={id}\n              id={id}\n              name={name}\n              number={number}\n              onDelete={onDelete}\n            />\n        ))}\n    </ul>\n);\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.shape).isRequired,\n    onDelete: PropTypes.func.isRequired,\n};\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n    <div className={styles.Container}>{children}</div>\n);\n\nContainer.propTypes = {\n    children: PropTypes.elementType.isRequired,\n};\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onFilter }) => (\n    <fieldset>\n        <legend>Quickly find the right contact</legend>\n        <label>\n            Find contacts by name\n            <input type=\"text\" name=\"filter\" value={value} onChange={onFilter} />\n        </label>\n    </fieldset>\n);\n\nFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onFilter: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import React from 'react';\nimport styles from './Header.module.css';\n\nconst Header = () => (\n    <header className={styles.Header}>\n        <h1>react hw-02 phone book</h1>\n    </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nconst Notification = ({ message }) => (\n    <p className={styles.Notification}>{message}</p>\n);\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n    <section className={styles.Section}>\n        <h2>{title}</h2>\n        {children}\n    </section>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.elementType.isRequired,\n};\n\nexport default Section;\n","import React, { Component } from 'react';\nimport { v4 as uid } from 'uuid';\nimport ContactForm from './ContactForm';\nimport ContactList from './ContactList';\nimport Container from './Container';\nimport Filter from './Filter';\nimport Header from './Header';\nimport Notification from './Notification';\nimport Section from './Section/Section';\n\nclass App extends Component {\n  state = {\n      filter: '',\n      contacts: [],\n  };\n\n  addContact = ([name, number]) => {\n      const { contacts } = this.state;\n      if (contacts.some((contact) => contact.name === name)) {\n      // eslint-disable-next-line\n      alert(\n              `${name\n                  .split(' ')\n                  .map((string) => string.charAt(0).toUpperCase() + string.slice(1))\n                  .join(\n                      ' ',\n                  )} is already in contacts. Change contact's name or delete old.`,\n          );\n          return;\n      }\n      const id = uid();\n      this.setState({\n          contacts: [{ name, number, id }, ...contacts],\n          filter: '',\n      });\n  };\n\n  changeFilter = (e) => {\n      const { value } = e.target;\n      this.setState({ filter: value });\n  };\n\n  getFilteredContacts = () => {\n      const { filter, contacts } = this.state;\n      const cleanFilter = filter.toLowerCase();\n      return contacts\n          .filter((contact) => contact.name.includes(cleanFilter))\n          .sort((a, b) => a.name.localeCompare(b.name)); // сортируем контакты по алфавиту\n  };\n\n  deleteContact = (idContact) => {\n      this.setState((prevState) => ({\n          contacts: prevState.contacts.filter(({ id }) => id !== idContact),\n      }));\n  };\n\n  render() {\n      const { contacts, filter } = this.state;\n      const filteredContacts = this.getFilteredContacts();\n\n      return (\n          <Container>\n              <Header />\n              <Section title=\"Phone book\">\n                  <ContactForm onSubmit={this.addContact} />\n              </Section>\n              <Section title=\"Contacts\">\n                  {contacts[0] ? (\n                      <Filter value={filter} onFilter={this.changeFilter} />\n                  ) : (\n                      <Notification message=\"No contacts added\" />\n                  )}\n                  {contacts[0] && !filteredContacts[0] && (\n                      <Notification message=\"No contact found\" />\n                  )}\n                  {filteredContacts[0] && (\n                      <ContactList\n                        contacts={filteredContacts}\n                        onDelete={this.deleteContact}\n                      />\n                  )}\n              </Section>\n          </Container>\n      );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\n/* eslint no-undef: \"error\" */\n/* eslint-env browser */\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}